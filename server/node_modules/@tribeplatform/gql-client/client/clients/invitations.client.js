import { getInvitationLinkGQLQuery, getMemberInvitationsGQLQuery, invitationLinkValidityGQLQuery, inviteMembersGQLQuery, memberInvitationValidityGQLQuery, } from '../../graphql/index.js';
export class InvitationsClient {
    constructor(client) {
        this.client = client;
    }
    async getLink(accessToken) {
        const result = await this.client.authorizedRequest({
            query: getInvitationLinkGQLQuery(),
            customToken: accessToken,
        });
        return result.memberInvitationLink;
    }
    async validateLink(variables, accessToken) {
        const result = await this.client.authorizedRequest({
            query: invitationLinkValidityGQLQuery(),
            variables,
            customToken: accessToken,
        });
        return result.invitationLinkValidity;
    }
    async invite(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: inviteMembersGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.inviteMembers;
    }
    async validate(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: memberInvitationValidityGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.memberInvitationValidity;
    }
    async list(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: getMemberInvitationsGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.memberInvitations;
    }
}
