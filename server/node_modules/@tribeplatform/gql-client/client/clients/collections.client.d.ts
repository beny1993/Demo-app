import { ActionFields, CollectionFields } from '../../graphql/index.js';
import { Action, Collection, MutationCreateCollectionArgs, MutationOrganizeCollectionsArgs, MutationUpdateCollectionArgs, QueryCollectionsArgs, Scalars, QueryCollectionArgs, MutationOrganizeSpacesInCollectionArgs } from '../../types/index.js';
import { GraphqlClient } from '../graphql.client.js';
export declare class CollectionsClient {
    private client;
    constructor(client: GraphqlClient);
    create(variables: MutationCreateCollectionArgs, fields?: CollectionFields, accessToken?: string): Promise<Collection>;
    list(variables?: QueryCollectionsArgs, fields?: CollectionFields, accessToken?: string): Promise<Collection[]>;
    get(variables: QueryCollectionArgs, fields?: CollectionFields, accessToken?: string): Promise<Collection>;
    update(variables: MutationUpdateCollectionArgs, accessToken?: string): Promise<Action>;
    delete(id: Scalars['ID'], accessToken?: string): Promise<Action>;
    organize(variables: MutationOrganizeCollectionsArgs, fields?: ActionFields, accessToken?: string): Promise<Action>;
    organizeSpaces(variables: MutationOrganizeSpacesInCollectionArgs): Promise<Action>;
}
