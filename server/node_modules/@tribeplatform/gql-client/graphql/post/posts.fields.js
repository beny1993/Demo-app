/* eslint-disable import/no-cycle */
import { embedGQLFields } from '../media/embed.fields.js';
import { mediaGQLFields } from '../media/media.fields.js';
import { memberGQLFields } from '../network/member.fields.js';
import { postAuthMemberPropsGQLFields, } from '../permission/postAuthMemberProps.fields.js';
import { spaceGQLFields } from '../space/space.fields.js';
import { spaceMemberGQLFields, } from '../space/spaceMember.fields.js';
import { fileGQLFields } from './file.fields.js';
import { postTypeGQLFields } from './postType.fields.js';
import { reactionGQLFields } from './reaction.fields.js';
import { tagGQLFields } from './tag.fields.js';
export const BASIC_POST_FIELDS = {
    owner: 'all',
};
export const ALL_POST_FIELDS = {
    authMemberProps: 'all',
    postType: 'basic',
    owner: 'all',
    createdBy: 'basic',
    tags: 'basic',
    attachments: 'basic',
    embeds: 'basic',
    mentions: 'basic',
    space: 'basic',
    reactions: { fields: 'basic', variables: { limit: 25 } },
    replies: { fields: 'basic', variables: { limit: 2 } },
    repliedTos: 'basic',
    repliedTo: 'basic',
};
export const DEFAULT_POST_FIELDS = {
    tags: 'basic',
    owner: {
        member: { profilePicture: 'basic' },
    },
    postType: 'basic',
    embeds: 'basic',
    mentions: 'basic',
    space: 'default',
    attachments: 'basic',
    authMemberProps: 'all',
    reactions: { fields: 'all', variables: { limit: 25 } },
    repliedTos: 'basic',
    replies: {
        fields: {
            authMemberProps: 'all',
            embeds: 'basic',
            mentions: 'basic',
            attachments: 'basic',
            owner: {
                member: { profilePicture: 'basic' },
            },
            reactions: { fields: 'all', variables: { limit: 25 } },
        },
        variables: {
            limit: 2,
            reverse: true,
        },
    },
};
export const WITH_REPLY_POST_FIELDS = Object.assign(Object.assign({}, DEFAULT_POST_FIELDS), { replies: {
        fields: 'default',
        variables: { limit: 2, reverse: true },
    } });
export function postGQLFields(fields) {
    var _a, _b, _c;
    if (fields === 'basic')
        fields = BASIC_POST_FIELDS;
    if (fields === 'all')
        fields = ALL_POST_FIELDS;
    if (fields === 'default')
        fields = DEFAULT_POST_FIELDS;
    if (fields === 'withReply')
        fields = WITH_REPLY_POST_FIELDS;
    return `
    id
    slug
    mappingFields {
      key
      type
      value
    }
    followersCount
    postTypeId
    reactionsCount
    hasMoreContent
    isAnonymous
    isHidden
    shortContent
    createdAt
    ownerId
    createdById
    status
    spaceId
    imageIds
    pinnedInto
    repliesCount
    totalRepliesCount
    repliedToIds
    repliedToId
    topicIds
    title
    embedIds
    mentionedMembers
    primaryReactionType
    customSeoDetail {
      description
      noIndex
      thumbnail {
        ${mediaGQLFields()}
      }
      thumbnailId
      title
    }
    relativeUrl
    url
    ${fields.attachments
        ? `
        attachments {
          ${fileGQLFields()}
        }
      `
        : ''}
    ${fields.authMemberProps
        ? `
      authMemberProps {
        ${postAuthMemberPropsGQLFields(fields.authMemberProps)}
      }`
        : ``}
    ${fields.postType
        ? `
      postType {
        ${postTypeGQLFields(fields.postType)}
      }
    `
        : ``}
    ${fields.owner
        ? `
      owner {
        ${spaceMemberGQLFields(fields.owner)}
      }
    `
        : ``}
    ${fields.createdBy
        ? `
      createdBy {
        ${spaceMemberGQLFields(fields.createdBy)}
      }
    `
        : ``}
    ${fields.tags
        ? `
      tags {
        ${tagGQLFields(fields.tags)}
      }
    `
        : ``}
    ${fields.embeds
        ? `
      embeds {
        ${embedGQLFields(fields.embeds)}
      }
    `
        : ``}
    ${fields.mentions
        ? `
      mentions {
        ${memberGQLFields(fields.mentions)}
      }
    `
        : ``}
    ${fields.space
        ? `
      space {
        ${spaceGQLFields(fields.space)}
      }
    `
        : ``}
    ${fields.reactions
        ? `
      reactions {
        ${reactionGQLFields(fields.reactions)}
      }
    `
        : ``}
    ${((_a = fields.replies) === null || _a === void 0 ? void 0 : _a.fields)
        ? `
      replies(limit: ${fields.replies.variables.limit || 1}, reverse: ${((_c = (_b = fields.replies) === null || _b === void 0 ? void 0 : _b.variables) === null || _c === void 0 ? void 0 : _c.reverse) || false} ) {
        edges {
          cursor
          node {
            ${postGQLFields(fields.replies.fields)}
          }
        }
        nodes {
          ${postGQLFields(fields.replies.fields)}
        }
        pageInfo {
          endCursor
          hasNextPage
        }
        totalCount
      }
    `
        : ``}
    ${fields.repliedTo
        ? `
      repliedTo {
        ${postGQLFields(fields.repliedTo)}
      }
    `
        : ``}
    ${fields.repliedTos
        ? `
      repliedTos {
        ${postGQLFields(fields.repliedTos)}
      }
    `
        : ``}
  `;
}
