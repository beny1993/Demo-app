import gql from 'graphql-tag';
import { memberGQLFields } from './member.fields.js';
export function getMembersGQLQuery(fields) {
    return gql `
    query Members(
      $after: String
      $before: String
      $filterBy: [MemberListFilterByInput!]
      $limit: Int!
      $offset: Int
      $orderBy: String
      $query: String
      $reverse: Boolean
      $roleIds: [ID!]
      $status: [MemberStatusInput!]
    ){
      members(
        after: $after
        before: $before
        filterBy: $filterBy
        limit: $limit
        offset: $offset
        orderBy: $orderBy
        query: $query
        reverse: $reverse
        roleIds: $roleIds
        status: $status
      ) {
        totalCount
        edges {
          node {
            ${memberGQLFields(fields)}
          }
        }
        pageInfo {
          hasNextPage
          endCursor
        }
      }
    }
  `;
}
export function getMemberGQLQuery(fields) {
    return gql `
    query GetMember($id: ID!) {
      member(id: $id) {
        ${memberGQLFields(fields)}
      }
    }
  `;
}
export function updateMemberGQLQuery(fields) {
    return gql `
    mutation UpdateMember($input: UpdateMemberInput!, $id: ID) {
      updateMember(id: $id, input: $input) {
        ${memberGQLFields(fields)}
      }
    }
  `;
}
export function deleteMemberGQLMutation() {
    return gql `
    mutation DeleteMember($id: ID!) {
      deleteMember(id: $id) {
        status
      }
    }
  `;
}
export const cancelEmailUpdateGQLMutation = () => gql `
  mutation CancelEmailUpdate($id: ID) {
    cancelEmailUpdate(id: $id) {
      status
    }
  }
`;
