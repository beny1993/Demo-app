import { baseCustomFieldSchemaGQLFields, } from './baseCustomFieldSchema.fields.js';
const BASIC_CUSTOM_FIELD_SCHEMA_FIELDS = {};
const ALL_CUSTOM_FIELD_SCHEMA_FIELDS = {
    items: 'basic',
    properties: 'all',
};
export const customFieldSchemaGQLFields = (fields) => {
    if (fields === 'basic')
        fields = BASIC_CUSTOM_FIELD_SCHEMA_FIELDS;
    if (fields === 'all')
        fields = ALL_CUSTOM_FIELD_SCHEMA_FIELDS;
    return `
    default
    description
    key
    name
    archived
    readPrivacy {
      allow
    }
    required
    searchable
    settings {
      key
      value
    }
    type
    typeOptions {
      dateType
      numberType
      relationType
      richTextType
      textType
    }
    validators {
      customErrorMessage
      validation
      value
    }
    writePrivacy {
      allow
    }
    ${fields.items
        ? `
      items {
        ${baseCustomFieldSchemaGQLFields(fields.items)}
      }
    `
        : ``}
    ${fields.properties
        ? `
      properties {
        ${baseCustomFieldSchemaGQLFields(fields.properties)}
      }
    `
        : ``}
  `;
};
