import { ActionFields, NotificationFields } from '../../graphql/index.js';
import { MemberNotificationSettings, MemberSpaceNotificationSettings, MemberNetworkNotificationSettings, MutationUpdateMemberNetworkNotificationSettingsArgs, MutationUpdateMemberSpaceNotificationSettingsArgs, PaginatedNotification, QueryMemberNotificationSettingsArgs, QueryNotificationsArgs, Scalars, MutationReadNotificationArgs, Action, MutationReadNotificationsArgs, MutationDeleteNotificationArgs, MutationDeleteNotificationsArgs, MutationUnsubscribeFromNotificationArgs, MemberPostNotificationSettings, QueryMemberPostNotificationSettingsArgs, MutationUpdateMemberPostNotificationSettingsArgs, QuerySpaceDefaultNotificationSettingsArgs, SpaceDefaultNotificationSettings, MutationUpdateSpaceDefaultNotificationSettingsArgs } from '../../types/index.js';
import { GraphqlClient } from '../graphql.client.js';
export declare class NotificationsClient {
    private client;
    constructor(client: GraphqlClient);
    count(accessToken?: string): Promise<Scalars['Float']>;
    list(variables?: QueryNotificationsArgs, fields?: NotificationFields, accessToken?: string): Promise<PaginatedNotification>;
    readNotification(variables: MutationReadNotificationArgs, fields?: ActionFields, accessToken?: string): Promise<Action>;
    readNotifications(variables: MutationReadNotificationsArgs, fields?: ActionFields, accessToken?: string): Promise<Action>;
    deleteNotification(variables: MutationDeleteNotificationArgs, fields?: ActionFields, accessToken?: string): Promise<Action>;
    deleteNotifications(variables: MutationDeleteNotificationsArgs, fields?: ActionFields, accessToken?: string): Promise<Action>;
    clearNotificationsCount(fields?: ActionFields, accessToken?: string): Promise<Action>;
    memberSettings(variables: QueryMemberNotificationSettingsArgs): Promise<MemberNotificationSettings>;
    memberPostNotificationSettings(variables: QueryMemberPostNotificationSettingsArgs): Promise<MemberPostNotificationSettings>;
    updateMemberPostNotificationSettings(variables: MutationUpdateMemberPostNotificationSettingsArgs): Promise<MemberPostNotificationSettings>;
    updateSpaceSettings(variables: MutationUpdateMemberSpaceNotificationSettingsArgs): Promise<MemberSpaceNotificationSettings>;
    updateNetworkSettings(variables: MutationUpdateMemberNetworkNotificationSettingsArgs): Promise<MemberNetworkNotificationSettings>;
    unsubscribe(variables: MutationUnsubscribeFromNotificationArgs, fields?: ActionFields, accessToken?: string): Promise<Action>;
    spaceDefaultNotificationSettings(variables: QuerySpaceDefaultNotificationSettingsArgs, accessToken?: string): Promise<SpaceDefaultNotificationSettings[]>;
    updateSpaceDefaultNotificationSettings(variables: MutationUpdateSpaceDefaultNotificationSettingsArgs, accessToken?: string): Promise<SpaceDefaultNotificationSettings>;
}
