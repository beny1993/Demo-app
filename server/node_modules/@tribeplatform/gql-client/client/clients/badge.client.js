import { assignBadgeGQLMutation, createBadgeGQLMutation, deleteBadgeGQLMutation, revokeBadgeGQLMutation, updateBadgeGQLMutation, } from '../../graphql/index.js';
export class BadgeClient {
    constructor(client) {
        this.client = client;
    }
    async create(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: createBadgeGQLMutation(fields),
            variables,
            customToken: accessToken,
        });
        return result.createBadge;
    }
    async update(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: updateBadgeGQLMutation(fields),
            variables,
            customToken: accessToken,
        });
        return result.updateBadge;
    }
    async delete(variables, accessToken) {
        const result = await this.client.authorizedRequest({
            query: deleteBadgeGQLMutation(),
            variables,
            customToken: accessToken,
        });
        return result.deleteBadge;
    }
    async assign(variables, accessToken) {
        const result = await this.client.authorizedRequest({
            query: assignBadgeGQLMutation(),
            variables,
            customToken: accessToken,
        });
        return result.assignBadge;
    }
    async revoke(variables, accessToken) {
        const result = await this.client.authorizedRequest({
            query: revokeBadgeGQLMutation(),
            variables,
            customToken: accessToken,
        });
        return result.revokeBadge;
    }
}
