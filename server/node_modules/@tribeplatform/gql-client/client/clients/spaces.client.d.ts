import { ActionFields, PaginatedSpaceFields, PostFields, SpaceFields } from '../../graphql/index.js';
import { PageFields } from '../../graphql/space/page.fields.js';
import { Action, MutationCreateSpaceArgs, MutationDeleteSpaceArgs, MutationJoinSpaceArgs, MutationLeaveSpaceArgs, MutationOrganizeSpacesInCollectionArgs, MutationUpdateSpaceArgs, MutationUpdateSpaceHighlightedTagsArgs, Page, PaginatedSpace, Post, QueryExploreSpacesArgs, QueryPageArgs, QuerySpaceArgs, QuerySpacePinnedPostsArgs, QuerySpacesArgs, QuerySpacesByIdsArgs, QuerySpacesBySlugsArgs, Space } from '../../types/index.js';
import { GraphqlClient } from '../graphql.client.js';
export declare class SpacesClient {
    private client;
    constructor(client: GraphqlClient);
    create(variables: MutationCreateSpaceArgs, fields?: SpaceFields, accessToken?: string): Promise<Space>;
    list(variables: QuerySpacesArgs, fields: SpaceFields, accessToken?: string): Promise<PaginatedSpace>;
    listByIds(variables: QuerySpacesByIdsArgs, fields?: SpaceFields, accessToken?: string): Promise<Space[]>;
    listBySlugs(variables: QuerySpacesBySlugsArgs, fields?: SpaceFields, accessToken?: string): Promise<Space[]>;
    organize(variables: MutationOrganizeSpacesInCollectionArgs, fields?: ActionFields, accessToken?: string): Promise<Action>;
    get(variables: QuerySpaceArgs, fields?: SpaceFields, accessToken?: string): Promise<Space>;
    getByPath(variables: QueryPageArgs, fields: PageFields, customToken?: string): Promise<Page>;
    update(variables: MutationUpdateSpaceArgs, fields?: SpaceFields): Promise<Space>;
    join(variables: MutationJoinSpaceArgs): Promise<Action>;
    leave(variables: MutationLeaveSpaceArgs): Promise<Action>;
    pinnedPosts(variables: QuerySpacePinnedPostsArgs, fields?: PostFields, accessToken?: string): Promise<Array<Post>>;
    explore(variables: QueryExploreSpacesArgs, fields?: PaginatedSpaceFields, accessToken?: string): Promise<PaginatedSpace>;
    updateHighlightedTags(variables: MutationUpdateSpaceHighlightedTagsArgs, accessToken?: string): Promise<Action>;
    delete(variables: MutationDeleteSpaceArgs, fields?: ActionFields, accessToken?: string): Promise<Action>;
}
