import { ModerationItemFields, ModerationItemReporterFields } from '../../graphql/index.js';
import { Action, ModerationItem, ModerationSettings, MutationUpdateModerationItemArgs, MutationUpdateModerationSettingsArgs, PaginatedModeration, PaginatedModerationItemReporter, QueryModerationItemArgs, QueryModerationItemReportersArgs, QueryModerationItemsArgs } from '../../types/index.js';
import { GraphqlClient } from '../graphql.client.js';
export declare class ModerationClient {
    private client;
    constructor(client: GraphqlClient);
    getItem(variables: QueryModerationItemArgs, fields?: ModerationItemFields, accessToken?: string): Promise<ModerationItem>;
    getItems(variables: QueryModerationItemsArgs, fields?: ModerationItemFields, accessToken?: string): Promise<PaginatedModeration>;
    getItemReporters(variables: QueryModerationItemReportersArgs, fields?: ModerationItemReporterFields, accessToken?: string): Promise<PaginatedModerationItemReporter>;
    settings(accessToken?: string): Promise<ModerationSettings>;
    updateSettings(variables: MutationUpdateModerationSettingsArgs, accessToken?: string): Promise<ModerationSettings>;
    updateItem(variables: MutationUpdateModerationItemArgs, accessToken?: string): Promise<Action>;
}
