import { moderationItemGQLQuery, moderationItemReportersGQLQuery, moderationItemsGQLQuery, moderationSettingsGQLQuery, updateModerationItemGQLMutation, updateModerationSettingsGQLMutation, } from '../../graphql/index.js';
export class ModerationClient {
    constructor(client) {
        this.client = client;
    }
    async getItem(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: moderationItemGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.moderationItem;
    }
    async getItems(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: moderationItemsGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.moderationItems;
    }
    async getItemReporters(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: moderationItemReportersGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.moderationItemReporters;
    }
    async settings(accessToken) {
        const result = await this.client.authorizedRequest({
            query: moderationSettingsGQLQuery(),
            customToken: accessToken,
        });
        return result.moderationSettings;
    }
    async updateSettings(variables, accessToken) {
        const result = await this.client.authorizedRequest({
            query: updateModerationSettingsGQLMutation(),
            variables,
            customToken: accessToken,
        });
        return result.updateModerationSettings;
    }
    async updateItem(variables, accessToken) {
        const result = await this.client.authorizedRequest({
            query: updateModerationItemGQLMutation(),
            variables,
            customToken: accessToken,
        });
        return result.updateModerationItem;
    }
}
