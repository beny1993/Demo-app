import { getActivityLogsGQLQuery, getLeaderboardGQLQuery, getLeaderboardWithScoresGQLQuery, getReportGQLQuery, } from '../../graphql/index.js';
export class ReportClient {
    constructor(client) {
        this.client = client;
    }
    async get(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: getReportGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.report;
    }
    async getLeaderboard(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: getLeaderboardGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.leaderboard;
    }
    async getLeaderboardWithScores(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: getLeaderboardWithScoresGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.leaderboardWithScores;
    }
    async activityLogs(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: getActivityLogsGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.activityLogs;
    }
}
