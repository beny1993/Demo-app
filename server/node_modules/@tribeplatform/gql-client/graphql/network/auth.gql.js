import gql from 'graphql-tag';
import { authTokenGQLFields } from './authToken.fields.js';
import { memberGQLFields } from './member.fields.js';
export function getTokensGQLQuery(fields) {
    return gql `
    query getTokens(
      $networkDomain: String
      $networkId: ID
      $otp: String
      $ssoToken: String
      $refreshToken: String
    ) {
      tokens(
        networkDomain: $networkDomain
        networkId: $networkId
        otp: $otp
        ssoToken: $ssoToken
        refreshToken: $refreshToken
      ) {
        ${authTokenGQLFields(fields)}
      }
    }
  `;
}
export function resendVerificationGQLQuery() {
    return gql `
    mutation resendVerification {
      resendVerification {
        status
      }
    }
  `;
}
export function loginNetworkQuery(fields) {
    return gql `
    query loginNetwork($input: LoginNetworkWithPasswordInput!) {
      loginNetwork(input: $input) {
        ${authTokenGQLFields(fields)}
      }
    }
  `;
}
export function ssoRedirectMutation(fields) {
    return gql `
    mutation ssoRedirect(
      $input: LoginWithSsoCodeInput!
    ) {
      ssoRedirect(input: $input) {
        ${authTokenGQLFields(fields)}
      }
    }
  `;
}
export function joinNetworkMutation(fields) {
    return gql `
    mutation joinNetwork(
      $input: JoinNetworkInput!
    ) {
      joinNetwork(input: $input) {
        ${authTokenGQLFields(fields)}
      }
    }
  `;
}
export function joinNetworkWithInvitationLinkMutation(fields) {
    return gql `
    mutation joinNetworkWithInvitationLink(
      $input: JoinNetworkWithLinkInput!
    ) {
      joinNetworkWithInvitationLink(input: $input) {
        ${authTokenGQLFields(fields)}
      }
    }
  `;
}
export function joinNetworkWithTokenMutation(fields) {
    return gql `
    mutation joinNetworkWithToken(
      $input: JoinNetworkWithTokenInput!
    ) {
      joinNetworkWithToken(input: $input) {
        ${authTokenGQLFields(fields)}
      }
    }
  `;
}
export function verifyMemberMutation(fields) {
    return gql `
    mutation verifyMember(
      $input: VerifyMemberInput!
    ) {
      verifyMember(input: $input) {
        ${authTokenGQLFields(fields)}
      }
    }
  `;
}
export function ssosQuery() {
    return gql `
    query ssos($status: SsoStatus) {
      ssos(status: $status) {
        authorizationUrl
        status
        tokenUrl
        type
        userProfileUrl
        buttonText
        clientId
        clientSecret
        idpUrl
        logoutUrl
        name
        provider
        scopes
        settingsUrl
      }
    }
  `;
}
export const sendResetPasswordEmailGQLMutation = () => gql `
  mutation SendResetPasswordEmail($email: String!) {
    sendResetPasswordEmail(email: $email) {
      status
    }
  }
`;
export const authMemberQuery = (fields) => gql `
  query AuthMember {
    authMember {
      ${memberGQLFields(fields)}
    }
  }
`;
export const logoutMutation = () => gql `
  mutation logoutNetwork($input: LogoutNetworkInput) {
    logoutNetwork(input: $input) {
      status
    }
  }
`;
