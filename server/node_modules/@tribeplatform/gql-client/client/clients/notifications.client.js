import { getNotificationsCountGQLQuery, getNotificationsGQLQuery, getMemberNotificationSettingsGQLQuery, updateSpaceNotificationSettingsGQLMutation, updateNetworkNotificationSettingsGQLMutation, readNotificationGQLMutation, readNotificationsGQLMutation, deleteNotificationGQLMutation, deleteNotificationsGQLMutation, clearNotificationsCountGQLMutation, unsubscribeFromNotificationGQLMutation, getMemberPostNotificationSettingsGQLQuery, updateMemberPostNotificationSettingsGQLMutation, spaceDefaultNotificationSettingsGQLQuery, updateSpaceDefaultNotificationSettingsGQLMutation, } from '../../graphql/index.js';
export class NotificationsClient {
    constructor(client) {
        this.client = client;
    }
    async count(accessToken) {
        const result = await this.client.authorizedRequest({
            query: getNotificationsCountGQLQuery(),
            customToken: accessToken,
        });
        return result.notificationsCount.new;
    }
    async list(variables = { limit: 10 }, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: getNotificationsGQLQuery(fields),
            variables,
            customToken: accessToken,
        });
        return result.notifications;
    }
    async readNotification(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: readNotificationGQLMutation(fields),
            variables,
            customToken: accessToken,
        });
        return result.readNotification;
    }
    async readNotifications(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: readNotificationsGQLMutation(fields),
            variables,
            customToken: accessToken,
        });
        return result.readNotifications;
    }
    async deleteNotification(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: deleteNotificationGQLMutation(fields),
            variables,
            customToken: accessToken,
        });
        return result.deleteNotification;
    }
    async deleteNotifications(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: deleteNotificationsGQLMutation(fields),
            variables,
            customToken: accessToken,
        });
        return result.deleteNotifications;
    }
    async clearNotificationsCount(fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: clearNotificationsCountGQLMutation(fields),
            customToken: accessToken,
        });
        return result.clearNotificationsCount;
    }
    async memberSettings(variables) {
        const result = await this.client.authorizedRequest({
            variables,
            query: getMemberNotificationSettingsGQLQuery(),
        });
        return result.memberNotificationSettings;
    }
    async memberPostNotificationSettings(variables) {
        const result = await this.client.authorizedRequest({
            variables,
            query: getMemberPostNotificationSettingsGQLQuery(),
        });
        return result.memberPostNotificationSettings;
    }
    async updateMemberPostNotificationSettings(variables) {
        const result = await this.client.authorizedRequest({
            variables,
            query: updateMemberPostNotificationSettingsGQLMutation(),
        });
        return result.updateMemberPostNotificationSettings;
    }
    async updateSpaceSettings(variables) {
        const result = await this.client.authorizedRequest({
            variables,
            query: updateSpaceNotificationSettingsGQLMutation(),
        });
        return result.updateMemberSpaceNotificationSettings;
    }
    async updateNetworkSettings(variables) {
        const result = await this.client.authorizedRequest({
            variables,
            query: updateNetworkNotificationSettingsGQLMutation(),
        });
        return result.updateMemberNetworkNotificationSettings;
    }
    async unsubscribe(variables, fields = 'basic', accessToken) {
        const result = await this.client.authorizedRequest({
            query: unsubscribeFromNotificationGQLMutation(fields),
            variables,
            customToken: accessToken,
        });
        return result.unsubscribeFromNotification;
    }
    async spaceDefaultNotificationSettings(variables, accessToken) {
        const result = await this.client.authorizedRequest({
            query: spaceDefaultNotificationSettingsGQLQuery(),
            variables,
            customToken: accessToken,
        });
        return result.spaceDefaultNotificationSettings;
    }
    async updateSpaceDefaultNotificationSettings(variables, accessToken) {
        const result = await this.client.authorizedRequest({
            query: updateSpaceDefaultNotificationSettingsGQLMutation(),
            variables,
            customToken: accessToken,
        });
        return result.updateSpaceDefaultNotificationSettings;
    }
}
